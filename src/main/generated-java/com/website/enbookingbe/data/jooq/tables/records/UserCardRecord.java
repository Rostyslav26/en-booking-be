/*
 * This file is generated by jOOQ.
 */
package com.website.enbookingbe.data.jooq.tables.records;


import com.website.enbookingbe.data.jooq.tables.UserCard;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserCardRecord extends UpdatableRecordImpl<UserCardRecord> implements Record4<Integer, Integer, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_card.card_id</code>.
     */
    public void setCardId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_card.card_id</code>.
     */
    public Integer getCardId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_card.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_card.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.user_card.learned</code>.
     */
    public void setLearned(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_card.learned</code>.
     */
    public Boolean getLearned() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.user_card.favorite</code>.
     */
    public void setFavorite(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_card.favorite</code>.
     */
    public Boolean getFavorite() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Boolean, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Boolean, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserCard.USER_CARD.CARD_ID;
    }

    @Override
    public Field<Integer> field2() {
        return UserCard.USER_CARD.USER_ID;
    }

    @Override
    public Field<Boolean> field3() {
        return UserCard.USER_CARD.LEARNED;
    }

    @Override
    public Field<Boolean> field4() {
        return UserCard.USER_CARD.FAVORITE;
    }

    @Override
    public Integer component1() {
        return getCardId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Boolean component3() {
        return getLearned();
    }

    @Override
    public Boolean component4() {
        return getFavorite();
    }

    @Override
    public Integer value1() {
        return getCardId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Boolean value3() {
        return getLearned();
    }

    @Override
    public Boolean value4() {
        return getFavorite();
    }

    @Override
    public UserCardRecord value1(Integer value) {
        setCardId(value);
        return this;
    }

    @Override
    public UserCardRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserCardRecord value3(Boolean value) {
        setLearned(value);
        return this;
    }

    @Override
    public UserCardRecord value4(Boolean value) {
        setFavorite(value);
        return this;
    }

    @Override
    public UserCardRecord values(Integer value1, Integer value2, Boolean value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserCardRecord
     */
    public UserCardRecord() {
        super(UserCard.USER_CARD);
    }

    /**
     * Create a detached, initialised UserCardRecord
     */
    public UserCardRecord(Integer cardId, Integer userId, Boolean learned, Boolean favorite) {
        super(UserCard.USER_CARD);

        setCardId(cardId);
        setUserId(userId);
        setLearned(learned);
        setFavorite(favorite);
        resetChangedOnNotNull();
    }
}
